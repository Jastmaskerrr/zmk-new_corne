#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&lt { quick-tap-ms = <200>; };

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        clk_encoder: clk_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&mkp LCLK>, <&mkp RCLK>;

            tap-ms = <250>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    lr_clk: lr_clk {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        bindings = <&mkp>, <&mkp>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "MAIN";
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E         &kp R      &kp T                                            &mmv MOVE_UP                        &kp Y          &kp U          &kp I             &kp O    &kp P     &kp DELETE
&kp CAPS        &kp A  &kp S  &kp D         &kp F      &kp G                            &mmv MOVE_LEFT  &lr_clk RCLK LCLK  &mmv MOVE_RIGHT  &kp H          &lt 4 J        &kp K             &kp L    &kp SEMI  &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V      &kp B              &kp C_MUTE                    &mmv MOVE_DOWN                      &kp N          &kp M          &kp COMMA         &kp DOT  &kp FSLH  &kp LEFT_GUI
                              &kp LEFT_ALT  &kp SPACE  &lt 2 LC(LA(TAB))                                                                    &lt 3 LA(TAB)  &kp BACKSPACE  &kp LEFT_CONTROL
            >;

            sensor-bindings = <&clk_encoder>;
        };

        lower_layer {
            display-name = "ADJUST";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };


        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp INS         &kp EQUAL   &kp N7  &kp N8  &kp N9  &kp BACKSPACE                               &kp UP                &kp GRAVE             &kp AMPERSAND  &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SQT
&kp LEFT_SHIFT  &kp N0      &kp N4  &kp N5  &kp N6  &kp ENTER                         &kp LEFT  &kp ENTER  &kp RIGHT  &kp MINUS             &kp POUND      &kp ASTERISK     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOUBLE_QUOTES
&trans          &kp PERIOD  &kp N1  &kp N2  &kp N3  &none          &kp LOCKING_NUM              &kp DOWN              &kp NON_US_BACKSLASH  &kp AT_SIGN    &kp CARET        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PERCENT
                                    &trans  &trans  &trans                                                            &trans                &trans         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };


        layer_3 {
            display-name = "FN";
            bindings = <
&kp ESC  &kp F1   &kp F2   &kp F3   &kp F4            &kp F5                              &msc MOVE_Y(15)                    &kp F6   &kp F7     &kp F8   &kp F9   &kp F10  &kp BSPC
&kp TAB  &kp F11  &kp F12  &kp F13  &kp F14           &kp F15           &msc MOVE_X(-15)  &mkp MCLK         &msc MOVE_X(15)  &kp F16  &kp F17    &kp F18  &kp F19  &kp F20  &none
&trans   &kp N1   &kp N2   &kp N3   &kp N4            &kp N5   &none                      &msc MOVE_Y(-15)                   &kp N6   &kp N7     &kp N8   &kp N9   &kp N0   &kp LEFT_GUI
                           &trans   &kp LEFT_CONTROL  &trans                                                                 &trans   &kp SPACE  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };


        layer_4 {
            display-name = "NAV";
            bindings = <
&none  &kp PAGE_UP  &kp LS(TAB)  &kp UP    &kp TAB    &kp PAGE_DOWN                             &mmv MOVE_UP                     &none   &none          &kp MINUS        &kp EQUAL    &kp PAGE_UP    &kp HOME
&none  &kp HOME     &kp LEFT     &kp DOWN  &kp RIGHT  &kp END                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none   &none          &kp LEFT_SHIFT   &none        &none          &none
&none  &kp N1       &kp N2       &kp N3    &kp N4     &kp N5         &kp ESC                    &mmv MOVE_DOWN                   &none   &none          &kp LS(LC(TAB))  &kp LC(TAB)  &kp PAGE_DOWN  &kp END
                                 &trans    &kp SPACE  &trans                                                                     &trans  &kp BACKSPACE  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };


        layer_5 {
            display-name = "UTIL";
            bindings = <
&none  &none  &none  &none       &none       &none                  &none         &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFR  &none
&none  &none  &none  &bt BT_PRV  &bt BT_NXT  &none           &none  &none  &none  &rgb_ug RGB_TOG  &none            &none            &none            &none            &none
&none  &none  &none  &none       &none       &none  &none           &none         &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFF  &none
                     &none       &none       &none                                &none            &none            &none
            >;

            sensor-bindings = <&rgb_encoder>;
        };


    conditional_layers {
        compatible = "zmk,conditional-layers";

        UTIL {
            if-layers = <2 3>;
            then-layer = <5>;
        };
    };
};
